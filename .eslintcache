[{"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\index.js":"1","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\App.js":"2","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\reportWebVitals.js":"3","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Home.js":"4","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Footer.js":"5","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ChooseQuiz.js":"6","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\NaviBar.js":"7","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Body.js":"8","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\QuizData.js":"9","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\QuizApp.js":"10","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ScoreBoardTable.js":"11","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ScoreBoardData.js":"12","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Chat.js":"13","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\About.js":"14"},{"size":545,"mtime":1611703022000,"results":"15","hashOfConfig":"16"},{"size":424,"mtime":1612363302033,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611703022000,"results":"18","hashOfConfig":"16"},{"size":651,"mtime":1611703022000,"results":"19","hashOfConfig":"16"},{"size":210,"mtime":1611763499410,"results":"20","hashOfConfig":"16"},{"size":1598,"mtime":1612371799078,"results":"21","hashOfConfig":"16"},{"size":1196,"mtime":1612300136910,"results":"22","hashOfConfig":"16"},{"size":723,"mtime":1612366990406,"results":"23","hashOfConfig":"16"},{"size":7423,"mtime":1612373109075,"results":"24","hashOfConfig":"16"},{"size":6025,"mtime":1612372766240,"results":"25","hashOfConfig":"16"},{"size":663,"mtime":1611775096569,"results":"26","hashOfConfig":"16"},{"size":720,"mtime":1612373013020,"results":"27","hashOfConfig":"16"},{"size":3407,"mtime":1612365610925,"results":"28","hashOfConfig":"16"},{"size":4057,"mtime":1612375338781,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"4asnl",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\index.js",[],["66","67"],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\App.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\reportWebVitals.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Home.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Footer.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ChooseQuiz.js",["68"],"import React, {useEffect, useState } from 'react';\n\nimport QuizApp from \"./QuizApp\"\nimport quizdata from './QuizData'\nimport '../Style.scss'\nexport default function ChooseQuiz() {\n\n\n    const [buttonChat,SetbuttonChat] = useState(false);\n    const [buttonChat2,SetbuttonChat2] = useState(false);\n    const [buttonChat3,SetbuttonChat3] = useState(false);\n   \n    \n   \n    return (\n        <>  \n            <div id=\"quizzes\">\n              \n            <div class=\"quiz1\">\n            <h2>{quizdata[0].quizTitle}</h2>    \n            {buttonChat ? <QuizApp id=\"0\" />:null}   \n            <hr></hr>\n            <button  className=\"btn btn-secondary\" onClick={() => SetbuttonChat(!buttonChat)}>\n                 {buttonChat ? \"Zamknij quiz!\":\"Start quiz!\"}   \n                        </button>\n            </div>   \n            \n            <div class=\"quiz2\">\n            <h2>{quizdata[1].quizTitle}</h2>\n             {buttonChat2 ? <QuizApp id=\"1\" />:null}   \n             <hr></hr>   \n            <button className=\"btn btn-secondary\" onClick={() => SetbuttonChat2(!buttonChat2)}>\n                {buttonChat2 ? \"Zamknij quiz!\":\"Start quiz!\"}</button>\n            \n                </div>\n            <div class=\"quiz3\">\n            <h2>{quizdata[2].quizTitle}</h2>\n             {buttonChat3 ? <QuizApp id=\"2\" />:null}   \n             <hr></hr>   \n            <button className=\"btn btn-secondary\" onClick={() => SetbuttonChat3(!buttonChat3)}>\n                {buttonChat3 ? \"Zamknij quiz!\":\"Start quiz!\"}</button>\n            \n                </div>          \n            </div>\n\n        </>\n    )\n}","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\NaviBar.js",["69","70","71"],"import React from \"react\";\n\nimport {Link} from \"react-router-dom\";\n\n\n\n\nexport default function NaviBar() {\n\n    return (\n        <nav className=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\n            <a className=\"navbar-brand\" href=\"#\">QuizzBiu</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\"\n                    aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"/>\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item \">\n                        <a><Link className=\"nav-link\" to=\"/Home\">Główna strona <span className=\"sr-only\">(current)</span></Link></a>\n                    </li>\n                   \n                  \n                    <li className=\"nav-item\">\n                        <a><Link className=\"nav-link\" to=\"/About\">O projekcie</Link></a>\n                    </li>\n\n                </ul>\n              \n            </div>\n        </nav>\n    )\n}","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Body.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\QuizData.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\QuizApp.js",["72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],"import { render } from '@testing-library/react';\nimport scoreboard from './ScoreBoardData'\nimport React, {useEffect, useState } from 'react';\nimport quizdata from './QuizData'\nimport ScoreBoardTable from './ScoreBoardTable'\nimport $ from 'jquery'\nexport default function QuizApp(props)  {\n\tconst [user,setUser]=useState(\"\");\n\tconst [currentQuestion, setCurrentQuestion] = useState(0);\n\tconst [showScore, setShowScore] = useState(false);\n\tconst [score, setScore] = useState(0);\n\tconst [OpenScore,setOpenScore]=useState(0);\n\t\n\t\n\tconst handleAnswerOptionClick = (isCorrect) => {\n\t\t\n\t\tif(quizdata[props.id].questions[currentQuestion].typOfQuestion=='open'){\n\t\t\tif(isCorrect==document.getElementById('openQuestion').value){\n\t\t\t\tsetScore(score + 1);\n\t\t\t\n\t\t\t}\n\t\t\n\t\t}else if(quizdata[props.id].questions[currentQuestion].typOfQuestion=='gapWord'){\n\t\t\tif(isCorrect==document.getElementById('gap').value){\n\t\t\t\tsetScore(score + 1);\n\t\t\t\n\t\t\t}\n\t\t\n\t\t}else if(quizdata[props.id].questions[currentQuestion].typOfQuestion=='multiChoice'){\n\n\t\t\tvar trueCheckbox = []; \n\t\t\tvar checkboxChecked = []; \n\t\t\tvar checkboxes = document.getElementsByName(\"input\");\n\t\t\n    \t\t\tfor(var i = 0; i < checkboxes.length; i++) {\n\t\t\t\t\tif((checkboxes[i].value === \"true\")){\n\t\t\t\t\t\ttrueCheckbox.push(checkboxes[i])\n\t\t\t\t\t}\t\n      \t\t\t  if(checkboxes[i].checked && (checkboxes[i].value === \"true\")) {\n\t\t\t\t\tcheckboxChecked.push(checkboxes[i])\n\t\t\t\t}else if(checkboxes[i].checked && (checkboxes[i].value === \"false\"))\n\t\t\t\tcheckboxChecked.pop()\n\t\t\t\t}\n\t\t\t\t\n\n   \t\t\t\t if(trueCheckbox.length==checkboxChecked.length) {\n\t\t\t\t\tsetScore(score + 1)\n   \t\t\t\t} \n  \t\t\t\t\n\n\t\t\t\n\t\t\n\t\t\t\n\n\t\t}else if(quizdata[props.id].questions[currentQuestion].typOfQuestion=='choice'){\n\t\t\tif (isCorrect) {\n\t\t\t\n\t\t\t\tsetScore(score + 1);\n\t\t\t\n\t\t\t}\n\t\t\t\t\n\n\t\t}\n\t\t\n\t\t\t\t\n\t\t\n\n\t\tconst nextQuestion = currentQuestion + 1;\n\t\tif (nextQuestion < quizdata[props.id].questions.length) {\n\t\t\tsetCurrentQuestion(nextQuestion);\n\t\t\t\n\t\t\t\n\t\t} else {\n\t\t\n\t\t\t\t\n\t\t\tif(isCorrect){\n\t\t\t\t\n\t\t\t\tscoreboard[props.id].users.push({nick:user,score:score+1})\n\t\t\t}else if(!isCorrect){\n\t\t\t\tscoreboard[props.id].users.push({nick:user,score:score})\n\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tsetShowScore(true);\n\t\t\t\n\t\t\t\n\t\t}\n\t};\n\n\t\n\t\n\t\tuseEffect(()=>\n\t\t{\n\t\t\tif(user.length<=0){\n\t\t\t\tvar person = prompt(\"Please enter your name\", \"Harry Potter\");\n\t\t\t\tsetUser(person);\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t});\n\t\t\n\t\t\n\t\t\n\t\n\t\t \n\treturn (\n\t\t\n\t\t<div className='app'>\n\t\t\t\n\t\t {showScore ? (\n\t\t\t <div className='score-section'>\n\t\t\t\t \n\t\t\t\t Twój wynik {user} to : {score} na {quizdata[props.id].questions.length}<br></br>\n\t\t\t\t \n\t\t\t\t\t\n\t\t\t\t <ScoreBoardTable data={scoreboard[props.id].users} />\n\t\t\t\t \n\n\t\t\t\t\n\t\t\t </div>\n\t\t ) : (\n\t\t\t <>\n\t\t\t\t <div className='question-section'>\n\t\t\t\t\t <div className='question-count'>\n\t\t\t\t\t\t <span>Question {currentQuestion + 1}</span>/{quizdata[props.id].questions.length}<br></br>\n\t\t\t\t\t\t\n\t\t\t\t\t </div>\n\t\t\t\t\t \t\n\t\t\t\t\t <div className='question-text'>{quizdata[props.id].questions[currentQuestion].questionText}</div>\n\t\t\t\t </div>\n\t\t\t\t <div className='answer-section'>\n\t\t\t\t {(() => {\n     \t\t\t\t\t   if (quizdata[props.id].questions[currentQuestion].typOfQuestion=='open') {\n     \t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<input id=\"openQuestion\" className=\"mr-2 mb-2 btn btn-secondary\" type=\"text\"></input><br></br>\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<button className=\"mr-2 mb-2 btn btn-secondary\" onClick={() => handleAnswerOptionClick(quizdata[props.id].questions[currentQuestion].answerOptions[0].isCorrect)}>Potwierdź</button>\n\t\t\t\t\t\t\t\t\t</>\n          \t\t\t\t\t\t)\n       \t\t\t\t\t\t } else if (quizdata[props.id].questions[currentQuestion].typOfQuestion=='choice') {\n         \t\t\t\t\t\t return (\n            \t\t\t\t\t\t<div> {quizdata[props.id].questions[currentQuestion].answerOptions.map((answerOption) => (\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<button className=\"mr-2 mb-2 w-75  btn btn-secondary\" onClick={() => handleAnswerOptionClick(answerOption.isCorrect)}>{answerOption.answerText}</button><br></br>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t   ))\n\t\t\t\t\t\t\t\t\t}</div>\n         \t\t\t\t\t\t )\n\t\t\t\t\t\t\t } else if (quizdata[props.id].questions[currentQuestion].typOfQuestion=='multiChoice') {\n\t\t\t\t\t\t\t\treturn (<>\n\t\t\t\t\t\t\t\t<div id=\"checkboxlist\">\n\t\t\t\t\t\t\t\t<input name=\"input\"className=\"mr-2 mb-2 btn btn-secondary\" type=\"checkbox\" value={quizdata[props.id].questions[currentQuestion].answerOptions[0].isCorrect} ></input>{quizdata[props.id].questions[currentQuestion].answerOptions[0].answerText}<br></br>\n\t\t\t\t\t\t\t\t<input name=\"input\" className=\"mr-2 mb-2 btn btn-secondary\" type=\"checkbox\" value={quizdata[props.id].questions[currentQuestion].answerOptions[1].isCorrect} ></input>{quizdata[props.id].questions[currentQuestion].answerOptions[1].answerText}<br></br>\n\t\t\t\t\t\t\t\t<input name=\"input\" className=\"mr-2 mb-2 btn btn-secondary\" type=\"checkbox\" value={quizdata[props.id].questions[currentQuestion].answerOptions[2].isCorrect} ></input>{quizdata[props.id].questions[currentQuestion].answerOptions[2].answerText}<br></br>\t\n\t\t\t\t\t\t\t\t<input name=\"input\" className=\"mr-2 mb-2 btn btn-secondary\" type=\"checkbox\" value={quizdata[props.id].questions[currentQuestion].answerOptions[3].isCorrect} ></input>{quizdata[props.id].questions[currentQuestion].answerOptions[3].answerText}<br></br>\t\n\t\t\t\t\t\t\t\t</div>\t\t\t   \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"mr-2 mb-2 btn btn-secondary\" onClick={() => handleAnswerOptionClick()}>Potwierdź</button>\n\n\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t\t\t  </>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t   }else if (quizdata[props.id].questions[currentQuestion].typOfQuestion=='gapWord') {\n         \t\t\t\t\t\t return (<>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<div className='question-text'>{quizdata[props.id].questions[currentQuestion].sentence}<input id=\"gap\" placeHolder=\".........................\"type=\"text\"></input>{quizdata[props.id].questions[currentQuestion].restSentence}</div>\n\t\t\t\t\t\t\t\t\t<button className=\"mr-2 mb-2 btn btn-secondary\" onClick={() => handleAnswerOptionClick(quizdata[props.id].questions[currentQuestion].answerOptions[0].isCorrect)}>Potwierdź</button>\n\t\t\t\t\t\t\t\t\t</>\n          \t\t\t\t\t\t)\n       \t\t\t\t\t\t }\n      \t\t\t})()}\n\n\n\n\n\n\t\t\t\t </div>\n\t\t\t </>\n\t\t )}\n\t </div>\n\t);\n}","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ScoreBoardTable.js",["88","89","90","91","92","93"],"import React, {useEffect, useState,useRef } from 'react';\n\n\nimport scoreboard from './ScoreBoardData'\n\nexport default function ScoreBoardTable(props) {\n\n\n\n\t\tprops.data.sort((a, b) => (a.score < b.score) ? 1 : -1)\n\t\n\t\t\n        return (\n\t\t\tprops.data.length > 0 && (\n\t\t\t\t<div class=\"scrollTable\">\n\t\t\t\t<table class=\"table table-striped\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th scope=\"col\">Nick</th>\n\t\t\t\t\t\t\t<th scope=\"col\">Score:</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{props.data.map(p => (\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td scope=\"row\">{p.nick}</td>\n\t\t\t\t\t\t\t\t<td scope=\"row\">{p.score}</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t);\n\n\n\n\n\t\t\n}",["94","95"],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\ScoreBoardData.js",[],"C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\Chat.js",["96","97","98"],"import React, { useRef, useState } from 'react';\nimport '../style.css'\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyBNgk24NV6xJwS0Rl0Xs5plAuZfga1X84o\",\n    authDomain: \"quizbiu.firebaseapp.com\",\n    projectId: \"quizbiu\",\n    storageBucket: \"quizbiu.appspot.com\",\n    messagingSenderId: \"512126771398\",\n    appId: \"1:512126771398:web:dee367788bedbde98cb7c7\"\n  })\n  \n  const auth = firebase.auth();\n  const firestore = firebase.firestore();\n  const analytics = firebase.analytics();\n\nfunction Chat() {\n    const [user] = useAuthState(auth);\n    return (\n        <>\n   \n            <div className=\"App\">\n\n                <div id=\"chat\">\n                    <h1></h1>\n                    <section>\n                    <SignOut />\n                      {user ? <ChatRoom /> : <SignIn />}\n                    </section>\n                </div>\n            </div>\n\n        </>\n    );\n}\nfunction SignIn() {\n\n    const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n    }\n  \n    return (\n      <>\n        <button className=\"btn btn-secondary\" onClick={signInWithGoogle}>Sign in with Google</button>\n    \n      </>\n    )\n  \n  }\n  \n  function SignOut() {\n    return auth.currentUser && (\n      <button className=\"btn btn-secondary\" onClick={() => auth.signOut()}>Sign Out</button>\n    )\n  }\n\n\nfunction ChatRoom() {\n    const dummy = useRef();\n    const messagesRef = firestore.collection('messages');\n    const query = messagesRef.orderBy('createdAt').limit(1000);\n\n    const [messages] = useCollectionData(query, {idField: 'id'});\n\n    const [formValue, setFormValue] = useState('');\n\n\n    const sendMessage = async (e) => {\n        e.preventDefault();\n        const {uid, photoURL} = auth.currentUser;\n\n        await messagesRef.add({\n            text: formValue,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n            uid,\n            photoURL\n        })\n\n        setFormValue('');\n        dummy.current.scrollIntoView({behavior: 'smooth'});\n    }\n\n    return (<>\n        <main>\n\n            {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg}/>)}\n\n            <span ref={dummy}></span>\n\n        </main>\n\n        <form className=\"form\" onSubmit={sendMessage}>\n\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"napisz coś..\"/>\n\n            <button type=\"submit\" disabled={!formValue}>🛆</button>\n\n        </form>\n    </>)\n}\n\n\nfunction ChatMessage(props) {\n    const {text, uid, photoURL} = props.message;\n\n    const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n    const DEFAULT_IMAGE=\"https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png\"\n    return (<>\n        <div id=\"body\">\n\n            <div className={`message ${messageClass}`}>\n                <img id=\"photoChat\"  src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} onError={(e)=>{e.target.src=DEFAULT_IMAGE}}/>\n                \n                <p className=\"p\">{text}</p>\n            </div>\n        </div>\n    </>)\n}\n\n\nexport default Chat;","C:\\Users\\gliwa\\Desktop\\projekt-biu\\projekt1-mario688\\src\\components\\About.js",["99","100"],"import React from \"react\"\r\nimport NaviBar from \"./NaviBar\";\r\nimport Footer from \"./Footer\";\r\nimport Body from \"./Body\";\r\nimport photo from \"../img/logo_header.png\"\r\nimport check from \"../img/check.png\"\r\nexport default function About() {\r\n   \r\n    return (\r\n        <>\r\n        \r\n       \r\n        <NaviBar/>\r\n        <img id=\"photo\" src={photo} alt=\"Logo PJATKA\"/>\r\n        <div id=\"AboutBody\">\r\n\r\n        <div id=\"TextBody\">\r\n         <header>\r\n         <h3>Projekt X (40 pkt) Napisz aplikację, która będzie realizowała quiz. Aplikacja powinna spełniać następujące wymagania:</h3>\r\n         </header>\r\n         <div id=\"contents\">\r\n         <ul>\r\n         <li>(1 pkt) Aplikacja na stronie głównej powinna mieć możliwość wyboru przez użytkownika quizu<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         <li>(1 pkt) Po wybraniu quizu aplikacja powinna zapytać się o imię dla gracza<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         <li>(3 pkt) Następnie aplikacja powinna przeprowadzić quiz dla gracza<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         <li>(2 pkt) Aplikacja powinna przechowywać rankingi dla graczy dla danego quizu<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         <li>(1 pkt) Aplikacja powinna mieć możliwość tworzenia przez użytkownika quizu</li>\r\n         <li>(12 pkt) Quiz powinien mieć następujące typy pytań:\r\n            <ul>\r\n            <li>(1 pkt) Jednokrotnego wyboru<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(1 pkt) Wielokrotnego wyboru<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(1 pkt) Prawda/Fałsz<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(1 pkt) Krótka odpowiedź<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(1 pkt) Wybór odpowiedzi z listy</li>\r\n            <li>(2 pkt) Wypełnienie słów<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(3 pkt) Sortowanie elementów</li>\r\n            <li>(2 pkt) Dopasowanie elementów</li>\r\n            </ul>\r\n         </li>\r\n         <li>Pod ocenę będą brane następujące elementy:</li>\r\n         <li>(25 pkt) Uwzględnienie powyższych wymagań z uwzględnieniem sytuacji wyjątkowych</li>\r\n         <li>(10 pkt) Styl aplikacji pod względem CSS </li>\r\n         <ul>\r\n             <li>(1 pkt) Użycie frameworka CSS np. Bootstrap<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n             <li>(2 pkt) Personalizacja stylu CSS za pomocą Less/SaaS<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n             <li>(4 pkt) Funkcjonalne ułożenie elementów aplikacji<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n             <li>(1 pkt) Użycie React Rounting<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n             <li>(1 pkt) Użycie React Redux</li>\r\n             <li>(1 pkt) Użycie TypeScript</li>\r\n         </ul>\r\n         <li>(2 pkt) Przetestowanie aplikacji</li>\r\n         <li>(2 pkt) Styl i podział kodu<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         <li>Dodatkowe punkty można otrzymać za wykonanie następujących podpunktów:</li>\r\n         <ul>\r\n            <li>(1 pkt) Logowanie administratora</li>\r\n\r\n            <li> (1 pkt) Internationalizacja aplikacji</li>\r\n            <li>(1 pkt) Deploy aplikacji na serwer zewnętrzny (na przykład w serwisie Heroku/Netlify).<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n            <li>(2 pkt) Inne rzeczy, nie pokazane na wykładzie/zajęciach.<img id=\"check\" src={check} alt=\"Logo PJATKA\"/></li>\r\n         </ul>\r\n         <li>Ponadto pod ocenę jest brane również: (Brak tych elementów to ujemne punkty od obowiązkowej punktacji zadania!)</li>\r\n         <ul>\r\n             <li>Historia projektu w repozytorium.</li>\r\n             <li>Ocena opisu commitów</li>\r\n             <li>Stan repozytorium (żeby nie był śmietnikiem!!!)</li>\r\n         </ul>\r\n         </ul>\r\n         </div>\r\n         </div>\r\n        </div>\r\n        \r\n       \r\n        </>\r\n    )\r\n}",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"110","line":12,"column":13,"nodeType":"111","endLine":12,"endColumn":50},{"ruleId":"109","severity":1,"message":"112","line":21,"column":25,"nodeType":"111","endLine":21,"endColumn":28},{"ruleId":"109","severity":1,"message":"112","line":26,"column":25,"nodeType":"111","endLine":26,"endColumn":28},{"ruleId":"105","severity":1,"message":"113","line":1,"column":10,"nodeType":"107","messageId":"108","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"114","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":9},{"ruleId":"105","severity":1,"message":"115","line":12,"column":9,"nodeType":"107","messageId":"108","endLine":12,"endColumn":18},{"ruleId":"105","severity":1,"message":"116","line":12,"column":19,"nodeType":"107","messageId":"108","endLine":12,"endColumn":31},{"ruleId":"117","severity":1,"message":"118","line":17,"column":65,"nodeType":"119","messageId":"120","endLine":17,"endColumn":67},{"ruleId":"117","severity":1,"message":"118","line":18,"column":16,"nodeType":"119","messageId":"120","endLine":18,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":23,"column":71,"nodeType":"119","messageId":"120","endLine":23,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":24,"column":16,"nodeType":"119","messageId":"120","endLine":24,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":29,"column":71,"nodeType":"119","messageId":"120","endLine":29,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":46,"column":31,"nodeType":"119","messageId":"120","endLine":46,"endColumn":33},{"ruleId":"117","severity":1,"message":"118","line":55,"column":71,"nodeType":"119","messageId":"120","endLine":55,"endColumn":73},{"ruleId":"121","severity":1,"message":"122","line":92,"column":3,"nodeType":"107","endLine":92,"endColumn":12,"suggestions":"123"},{"ruleId":"117","severity":1,"message":"118","line":133,"column":77,"nodeType":"119","messageId":"120","endLine":133,"endColumn":79},{"ruleId":"117","severity":1,"message":"118","line":141,"column":85,"nodeType":"119","messageId":"120","endLine":141,"endColumn":87},{"ruleId":"117","severity":1,"message":"118","line":151,"column":79,"nodeType":"119","messageId":"120","endLine":151,"endColumn":81},{"ruleId":"117","severity":1,"message":"118","line":167,"column":79,"nodeType":"119","messageId":"120","endLine":167,"endColumn":81},{"ruleId":"105","severity":1,"message":"106","line":1,"column":16,"nodeType":"107","messageId":"108","endLine":1,"endColumn":25},{"ruleId":"105","severity":1,"message":"124","line":1,"column":27,"nodeType":"107","messageId":"108","endLine":1,"endColumn":35},{"ruleId":"105","severity":1,"message":"125","line":1,"column":36,"nodeType":"107","messageId":"108","endLine":1,"endColumn":42},{"ruleId":"105","severity":1,"message":"126","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":26,"column":13,"nodeType":"129","endLine":26,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":27,"column":13,"nodeType":"129","endLine":27,"endColumn":24},{"ruleId":"101","replacedBy":"130"},{"ruleId":"103","replacedBy":"131"},{"ruleId":"105","severity":1,"message":"132","line":22,"column":9,"nodeType":"107","messageId":"108","endLine":22,"endColumn":18},{"ruleId":"133","severity":1,"message":"134","line":32,"column":21,"nodeType":"111","endLine":32,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":120,"column":17,"nodeType":"111","endLine":120,"endColumn":157},{"ruleId":"105","severity":1,"message":"137","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":14},{"ruleId":"105","severity":1,"message":"138","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":12},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'render' is defined but never used.","'$' is defined but never used.","'OpenScore' is assigned a value but never used.","'setOpenScore' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user.length] as a second argument to the useEffect Hook.",["141"],"'useState' is defined but never used.","'useRef' is defined but never used.","'scoreboard' is defined but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute",["139"],["140"],"'analytics' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Footer' is defined but never used.","'Body' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},"Add dependencies array: [user.length]",{"range":"144","text":"145"},[2331,2331],", [user.length]"]